<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ae="clr-namespace:ICSharpCode.AvalonEdit;assembly=ICSharpCode.AvalonEdit"
        xmlns:core="clr-namespace:System;assembly=mscorlib"
        xmlns:Soft64WPF="clr-namespace:Soft64WPF"
        xmlns:c="clr-namespace:Soft64WPF.Converters"
        xmlns:om="clr-namespace:System.Collections.ObjectModel;assembly=System"
        xmlns:win="clr-namespace:System.Windows;assembly=PresentationFramework"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Name="window" x:Class="Soft64WPF.Windows.CPUDebugger"
        Title="CPU Debugger" Height="711" Width="764"
        ResizeMode="NoResize">
    <Window.Resources>
        <ContextMenu x:Key="breakpointMenu">
            <MenuItem Header="Set Breakpoint" Click="BreakpointMenu_SetBreak" />
            <MenuItem Header="Clear Breakpoint" Click="BreakpointMenu_ClearBreak" />
        </ContextMenu>
    </Window.Resources>
    <Window.DataContext>
        <Binding Path="." Source="{StaticResource machineVM}"/>
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="501"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="23"/>
            <RowDefinition Height="29"/>
            <RowDefinition/>
            <RowDefinition Height="56.225"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin">
            <MenuItem Header="Debugger" d:IsHidden="True">
                <MenuItem x:Name="xaml_MenuBtnRefreshDisam" Header="Refresh Disassembly" d:IsHidden="True" />
                <MenuItem x:Name="xaml_MenuBtnSaveChanges" Header="Write Modifications" d:IsHidden="True" />
            </MenuItem>
            <MenuItem Header="Tools" d:IsHidden="True">
                <MenuItem Header="Core Compare ..." x:Name="xaml_BtnCompare" d:IsHidden="True"/>
                <MenuItem Header="Resources ..." x:Name="xaml_BtnResHooks" d:IsHidden="True"/>
                <MenuItem Header="Breakpoints ..." x:Name="xaml_BtnBreakpoints" d:IsHidden="True" />
            </MenuItem>
        </Menu>
        <StackPanel Orientation="Horizontal" Grid.Row="1">
            <StackPanel.Resources>
                <Style x:Name="Button" TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="10,5,0,0" />
                </Style>
            </StackPanel.Resources>
            <Button x:Name="xaml_BtnBreak" Content="Break" Width="76" Height="22" Margin="10,0,0,0" Click="xaml_BtnBreak_Click" VerticalAlignment="Top" d:IsHidden="True"/>
            <Button x:Name="xaml_BtnContinue" Content="Continue" Width="76" Height="22" Margin="10,0,0,0" Click="xaml_BtnContinue_Click" VerticalAlignment="Top" d:IsHidden="True"/>
            <Button x:Name="xaml_BtnStep" Content="Step" Width="76" Height="22" Click="xaml_BtnStep_Click" Margin="10,0,0,0" VerticalAlignment="Top" d:IsHidden="True"/>
        </StackPanel>

        <!-- CPU Registers -->
        <Soft64WPF:CpuRegistersPanel Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" HorizontalAlignment="Left" Margin="13,0,0,0"/>

        <ListBox x:Name="xaml_DataGridDisassembly" ItemsSource="{Binding DeviceCpu.Debugger.Disassembly}" Grid.Row="2" Background="#FF1F1425" FontFamily="Consolas" BorderBrush="{x:Null}" Grid.ColumnSpan="1" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible" FontSize="13.333" Foreground="#FFFF78F9" TextOptions.TextFormattingMode="Display" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" VerticalContentAlignment="Top">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="_Border" Padding="2" SnapsToDevicePixels="true">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="_Border" Property="Background" Value="Yellow"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <ItemContainerTemplate>
                    <StackPanel Orientation="Horizontal" ContextMenu="{StaticResource breakpointMenu}">
                        <Viewbox x:Name="PART_BreakPoint" Height="12" Width="12" Stretch="Fill" Visibility="Hidden">
                            <Ellipse Width="100" Height="100" >
                                <Ellipse.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFF9E9E" Offset="0"/>
                                        <GradientStop Color="#FFC10000" Offset="1"/>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Viewbox>
                        <Viewbox x:Name="PART_PCArrow" Height="12" Width="25" Stretch="Fill" Margin="5,0,0,0">
                            <Soft64WPF:ProgramCounterArrow GroupName="debugger">
                                <Soft64WPF:ProgramCounterArrow.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFF8000" Offset="1"/>
                                        <GradientStop Color="#FFFFBE31" Offset="0"/>
                                    </LinearGradientBrush>
                                </Soft64WPF:ProgramCounterArrow.Fill>
                            </Soft64WPF:ProgramCounterArrow>
                        </Viewbox>
                        <TextBlock Margin="5,0,0,0" Text="{Binding FullDisassembly}" />
                    </StackPanel>
                </ItemContainerTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <StackPanel Orientation="Vertical" Grid.Row="3" Grid.ColumnSpan="4" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" >
            <StackPanel Orientation="Horizontal" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" DataContext="{Binding DeviceCpu.State}">
                <StackPanel.Resources>
                    <c:Hex64Converter x:Key="hex64" />
                </StackPanel.Resources>
                <TextBlock Text="BranchPC"/>
                <TextBox  Width="111" Height="20"  Margin="5,0,0,0" Text="{Binding BranchPC, Converter={StaticResource hex64}}" />
                <TextBlock Text="Delay Slot" Margin="20,2.632,0,2.632"/>
                <TextBox  Width="111" Height="20" Margin="5,0,0,0" Text="{Binding BranchDelaySlot, Converter={StaticResource hex64}}" />
                <CheckBox Content="B"  Margin="22,0,0,0" VerticalAlignment="Center" IsChecked="{Binding BranchEnabled}"/>
                <CheckBox Content="N"  Margin="22,0,0,0" VerticalAlignment="Center" IsChecked="{Binding NullifiedEnabled}"/>
                <CheckBox Content="LL" Margin="22,0,0,0" VerticalAlignment="Center" IsChecked="{Binding LLBit}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" DataContext="{Binding DeviceCpu.State.Cop0Registers.Status}">
                <TextBlock Text="Status:" />
                <CheckBox Content="O64" Margin="10,0,0,0" IsChecked="{Binding IsOperating64, Mode=OneWay}" IsEnabled="False" />
                <CheckBox Content="A64" Margin="10,0,0,0" IsEnabled="False" IsChecked="{Binding IsAddressing64, Mode=OneWay}" />
                <CheckBox Content="FP" Margin="10,0,0,0" IsEnabled="False" IsChecked="{Binding AdditionalFPR, Mode=OneWay}" />
                <CheckBox Content="IE" Margin="10,0,0,0" IsEnabled="False" IsChecked="{Binding InterruptsEnabled, Mode=OneWay}" />
                <CheckBox Content="IM0" Margin="10,0,0,0" IsEnabled="False" IsChecked="{Binding InterruptMask0, Mode=OneWay}" />
                <CheckBox Content="IM1" Margin="10,0,0,0" IsEnabled="False" IsChecked="{Binding InterruptMask1, Mode=OneWay}" />
                <CheckBox Content="IM2" Margin="10,0,0,0" IsEnabled="False" IsChecked="{Binding InterruptMask2, Mode=OneWay}" />
                <CheckBox Content="IM3" Margin="10,0,0,0" IsEnabled="False" IsChecked="{Binding InterruptMask3, Mode=OneWay}" />
                <CheckBox Content="IM4" Margin="10,0,0,0" IsEnabled="False" IsChecked="{Binding InterruptMask4, Mode=OneWay}" />
                <CheckBox Content="IM5" Margin="10,0,0,0" IsEnabled="False" IsChecked="{Binding InterruptMask5, Mode=OneWay}" />
                <CheckBox Content="IM6" Margin="10,0,0,0" IsEnabled="False" IsChecked="{Binding InterruptMask6, Mode=OneWay}" />
                <CheckBox Content="IM7" Margin="10,0,0,0" IsEnabled="False" IsChecked="{Binding InterruptMask7, Mode=OneWay}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" DataContext="{Binding DeviceCpu.State.Cop0Registers.Cause}">
                <TextBlock Text="Cause:"/>
                <CheckBox Content="IP0" Margin="10,0,0,0" IsChecked="{Binding Interrupt0}"/>
                <CheckBox Content="IP1" Margin="10,0,0,0" IsChecked="{Binding Interrupt1}"/>
                <CheckBox Content="IP2" Margin="10,0,0,0" IsChecked="{Binding Interrupt2}"/>
                <CheckBox Content="IP3" Margin="10,0,0,0" IsChecked="{Binding Interrupt3}"/>
                <CheckBox Content="IP4" Margin="10,0,0,0" IsChecked="{Binding Interrupt4}"/>
                <CheckBox Content="IP5" Margin="10,0,0,0" IsChecked="{Binding Interrupt5}"/>
                <CheckBox Content="IP6" Margin="10,0,0,0" IsChecked="{Binding Interrupt6}"/>
                <CheckBox Content="IP7" Margin="10,0,0,0" IsChecked="{Binding Interrupt7}"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>